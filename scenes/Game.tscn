[gd_scene load_steps=6 format=2]

[ext_resource path="res://scenes/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/Wall.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/Enemy.tscn" type="PackedScene" id=3]
[ext_resource path="res://scripts/Game.gd" type="Script" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Camera2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
var _duration = 0.0
var _period_in_ms = 0.0
var _amplitude = 0.0
var _timer = 0.0
var _last_shook_timer = 0
var _previous_x = 0.0
var _previous_y = 0.0
var _last_offset = Vector2(0, 0)

func _process(delta):
    # Only shake when there's shake time remaining.
    if _timer == 0:
        return
    # Only shake on certain frames.
    _last_shook_timer = _last_shook_timer + delta
    # Be mathematically correct in the face of lag; usually only happens once.
    while _last_shook_timer >= _period_in_ms:
        _last_shook_timer = _last_shook_timer - _period_in_ms
        # Lerp between [amplitude] and 0.0 intensity based on remaining shake time.
        var intensity = _amplitude * (1 - ((_duration - _timer) / _duration))
        # Noise calculation logic from http://jonny.morrill.me/blog/view/14
        var new_x = rand_range(-1.0, 1.0)
        var x_component = intensity * (_previous_x + (delta * (new_x - _previous_x)))
        var new_y = rand_range(-1.0, 1.0)
        var y_component = intensity * (_previous_y + (delta * (new_y - _previous_y)))
        _previous_x = new_x
        _previous_y = new_y
        # Track how much we've moved the offset, as opposed to other effects.
        var new_offset = Vector2(x_component, y_component)
        set_offset(get_offset() - _last_offset + new_offset)
        _last_offset = new_offset
    # Reset the offset when we're done shaking.
    _timer = _timer - delta
    if _timer <= 0:
        _timer = 0
        set_offset(get_offset() - _last_offset)

# Kick off a new screenshake effect.
func shake(duration, frequency, amplitude):
    # Initialize variables.
    _duration = duration
    _timer = duration
    _period_in_ms = 1.0 / frequency
    _amplitude = amplitude
    _previous_x = rand_range(-1.0, 1.0)
    _previous_y = rand_range(-1.0, 1.0)
    # Reset previous offset, if any.
    set_offset(get_offset() - _last_offset)
    _last_offset = Vector2(0, 0)"

[node name="Game" type="Node2D"]
script = ExtResource( 4 )

[node name="Wall" parent="." instance=ExtResource( 2 )]
position = Vector2( 512, 584 )
scale = Vector2( 32, 1 )

[node name="Wall2" parent="." instance=ExtResource( 2 )]
position = Vector2( 512, 16 )
scale = Vector2( 32, 1 )

[node name="Wall3" parent="." instance=ExtResource( 2 )]
position = Vector2( 16, 304 )
scale = Vector2( 1, 20 )

[node name="Wall4" parent="." instance=ExtResource( 2 )]
position = Vector2( 1008, 304 )
scale = Vector2( 1, 20 )

[node name="Player" parent="." instance=ExtResource( 1 )]
position = Vector2( 256, 224 )

[node name="Enemy" parent="." instance=ExtResource( 3 )]
position = Vector2( 64, 64 )

[node name="Wall5" parent="." instance=ExtResource( 2 )]
position = Vector2( 128, 336 )
scale = Vector2( 6, 1 )

[node name="Wall6" parent="." instance=ExtResource( 2 )]
position = Vector2( 896, 336 )
scale = Vector2( 6, 1 )

[node name="Wall7" parent="." instance=ExtResource( 2 )]
position = Vector2( 529, 418 )
scale = Vector2( 8, 1 )

[node name="Wall8" parent="." instance=ExtResource( 2 )]
position = Vector2( 530, 189 )
scale = Vector2( 8, 1 )

[node name="Camera2D" type="Camera2D" parent="."]
offset = Vector2( 512, 300 )
current = true
script = SubResource( 1 )
